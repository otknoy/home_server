apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0%
      maxSurge: 10%
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-oss:10.2.2
        ports:
        - containerPort: 3000
        env:
        - name: GF_SERVER_ROOT_URL
          value: '/grafana'
        - name: GF_USERS_VIEWERS_CAN_EDIT
          value: 'true'
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: 'true'
        - name: GF_AUTH_ANONYMOUS_HIDE_VERSION
          value: 'true'
        volumeMounts:
        - name: provisioning-dashboards-volume
          mountPath: /etc/grafana/provisioning/dashboards
        - name: provisioning-datasources-volume
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboards-volume
          mountPath: /var/lib/grafana/dashboards
      volumes:
      - name: provisioning-dashboards-volume
        configMap:
          name: grafana-provisioning-dashboards-cm
      - name: provisioning-datasources-volume
        configMap:
          name: grafana-provisioning-datasources-cm
      - name: dashboards-volume
        projected:
          sources:
          - configMap:
              name: grafana-dashboards01-cm
          # - configMap:
          #     name: grafana-dashboards02-cm
          - configMap:
              name: grafana-dashboards03-cm

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
spec:
  selector:
    app: grafana
  ports:
  - port: 3000

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ing
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: '/grafana(/|$)(.*)'
        backend:
          service:
            name: grafana-svc
            port:
              number: 3000
